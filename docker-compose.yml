version: '3.8'

services:
  # Database Service - MySQL
  db:
    image: mysql:8.0
    container_name: scholarship_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: scholarship_portal_db
      MYSQL_USER: scholarship_user
      MYSQL_PASSWORD: scholarship_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - scholarship_network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Service - For caching and Celery broker
  redis:
    image: redis:7-alpine
    container_name: scholarship_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - scholarship_network
    command: redis-server --appendonly yes --requirepass redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 20s
      retries: 10

  # Django Web Application
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: scholarship_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=scholarship_portal.settings.production
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_URL=mysql://scholarship_user:scholarship_password@db:3306/scholarship_portal_db
      - REDIS_URL=redis://:redis_password@redis:6379/1
      - CELERY_BROKER_URL=redis://:redis_password@redis:6379/0
      - DB_HOST=db
      - DB_PORT=3306
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      - SENTRY_DSN=${SENTRY_DSN}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/var/log/scholarship_portal
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - scholarship_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      timeout: 30s
      retries: 3
      start_period: 60s

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scholarship_celery_worker
    restart: unless-stopped
    command: celery -A scholarship_portal worker -l info -Q default,notifications,reports,backups
    environment:
      - DJANGO_SETTINGS_MODULE=scholarship_portal.settings.production
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=mysql://scholarship_user:scholarship_password@db:3306/scholarship_portal_db
      - REDIS_URL=redis://:redis_password@redis:6379/1
      - CELERY_BROKER_URL=redis://:redis_password@redis:6379/0
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
    volumes:
      - ./logs:/var/log/scholarship_portal
    depends_on:
      - db
      - redis
      - web
    networks:
      - scholarship_network

  # Celery Beat Scheduler
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scholarship_celery_beat
    restart: unless-stopped
    command: celery -A scholarship_portal beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DJANGO_SETTINGS_MODULE=scholarship_portal.settings.production
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=mysql://scholarship_user:scholarship_password@db:3306/scholarship_portal_db
      - REDIS_URL=redis://:redis_password@redis:6379/1
      - CELERY_BROKER_URL=redis://:redis_password@redis:6379/0
    volumes:
      - ./logs:/var/log/scholarship_portal
    depends_on:
      - db
      - redis
      - web
    networks:
      - scholarship_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: scholarship_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - static_volume:/var/www/static:ro
      - media_volume:/var/www/media:ro
    depends_on:
      - web
    networks:
      - scholarship_network

  # Monitoring - Flower (Celery monitoring)
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scholarship_flower
    restart: unless-stopped
    command: celery -A scholarship_portal flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DJANGO_SETTINGS_MODULE=scholarship_portal.settings.production
      - CELERY_BROKER_URL=redis://:redis_password@redis:6379/0
      - FLOWER_BASIC_AUTH=${FLOWER_USER}:${FLOWER_PASSWORD}
    depends_on:
      - redis
      - celery_worker
    networks:
      - scholarship_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  scholarship_network:
    driver: bridge
